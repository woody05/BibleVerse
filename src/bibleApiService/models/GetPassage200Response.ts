/* tslint:disable */
/* eslint-disable */
/**
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Meta } from './Meta';
import {
    MetaFromJSON,
    MetaFromJSONTyped,
    MetaToJSON,
    MetaToJSONTyped,
} from './Meta';
import type { Passage } from './Passage';
import {
    PassageFromJSON,
    PassageFromJSONTyped,
    PassageToJSON,
    PassageToJSONTyped,
} from './Passage';

/**
 * 
 * @export
 * @interface GetPassage200Response
 */
export interface GetPassage200Response {
    /**
     * 
     * @type {Passage}
     * @memberof GetPassage200Response
     */
    data: Passage;
    /**
     * 
     * @type {Meta}
     * @memberof GetPassage200Response
     */
    meta: Meta;
}

/**
 * Check if a given object implements the GetPassage200Response interface.
 */
export function instanceOfGetPassage200Response(value: object): value is GetPassage200Response {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function GetPassage200ResponseFromJSON(json: any): GetPassage200Response {
    return GetPassage200ResponseFromJSONTyped(json, false);
}

export function GetPassage200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPassage200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'data': PassageFromJSON(json['data']),
        'meta': MetaFromJSON(json['meta']),
    };
}

export function GetPassage200ResponseToJSON(json: any): GetPassage200Response {
    return GetPassage200ResponseToJSONTyped(json, false);
}

export function GetPassage200ResponseToJSONTyped(value?: GetPassage200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': PassageToJSON(value['data']),
        'meta': MetaToJSON(value['meta']),
    };
}

