/* tslint:disable */
/* eslint-disable */
/**
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Passage
 */
export interface Passage {
    /**
     * 
     * @type {string}
     * @memberof Passage
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Passage
     */
    bibleId: string;
    /**
     * 
     * @type {string}
     * @memberof Passage
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof Passage
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof Passage
     */
    reference: string;
    /**
     * 
     * @type {number}
     * @memberof Passage
     */
    verseCount: number;
    /**
     * 
     * @type {string}
     * @memberof Passage
     */
    copyright: string;
}

/**
 * Check if a given object implements the Passage interface.
 */
export function instanceOfPassage(value: object): value is Passage {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('bibleId' in value) || value['bibleId'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('reference' in value) || value['reference'] === undefined) return false;
    if (!('verseCount' in value) || value['verseCount'] === undefined) return false;
    if (!('copyright' in value) || value['copyright'] === undefined) return false;
    return true;
}

export function PassageFromJSON(json: any): Passage {
    return PassageFromJSONTyped(json, false);
}

export function PassageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Passage {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'bibleId': json['bibleId'],
        'orgId': json['orgId'],
        'content': json['content'],
        'reference': json['reference'],
        'verseCount': json['verseCount'],
        'copyright': json['copyright'],
    };
}

export function PassageToJSON(json: any): Passage {
    return PassageToJSONTyped(json, false);
}

export function PassageToJSONTyped(value?: Passage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'bibleId': value['bibleId'],
        'orgId': value['orgId'],
        'content': value['content'],
        'reference': value['reference'],
        'verseCount': value['verseCount'],
        'copyright': value['copyright'],
    };
}

