/* tslint:disable */
/* eslint-disable */
/**
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Passage } from './Passage';
import {
    PassageFromJSON,
    PassageFromJSONTyped,
    PassageToJSON,
    PassageToJSONTyped,
} from './Passage';
import type { SearchVerse } from './SearchVerse';
import {
    SearchVerseFromJSON,
    SearchVerseFromJSONTyped,
    SearchVerseToJSON,
    SearchVerseToJSONTyped,
} from './SearchVerse';

/**
 * 
 * @export
 * @interface SearchResponse
 */
export interface SearchResponse {
    /**
     * 
     * @type {string}
     * @memberof SearchResponse
     */
    query: string;
    /**
     * 
     * @type {number}
     * @memberof SearchResponse
     */
    limit: number;
    /**
     * 
     * @type {number}
     * @memberof SearchResponse
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof SearchResponse
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof SearchResponse
     */
    verseCount: number;
    /**
     * 
     * @type {Array<SearchVerse>}
     * @memberof SearchResponse
     */
    verses: Array<SearchVerse>;
    /**
     * 
     * @type {Array<Passage>}
     * @memberof SearchResponse
     */
    passages?: Array<Passage>;
}

/**
 * Check if a given object implements the SearchResponse interface.
 */
export function instanceOfSearchResponse(value: object): value is SearchResponse {
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('offset' in value) || value['offset'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('verseCount' in value) || value['verseCount'] === undefined) return false;
    if (!('verses' in value) || value['verses'] === undefined) return false;
    return true;
}

export function SearchResponseFromJSON(json: any): SearchResponse {
    return SearchResponseFromJSONTyped(json, false);
}

export function SearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'],
        'limit': json['limit'],
        'offset': json['offset'],
        'total': json['total'],
        'verseCount': json['verseCount'],
        'verses': ((json['verses'] as Array<any>).map(SearchVerseFromJSON)),
        'passages': json['passages'] == null ? undefined : ((json['passages'] as Array<any>).map(PassageFromJSON)),
    };
}

export function SearchResponseToJSON(json: any): SearchResponse {
    return SearchResponseToJSONTyped(json, false);
}

export function SearchResponseToJSONTyped(value?: SearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': value['query'],
        'limit': value['limit'],
        'offset': value['offset'],
        'total': value['total'],
        'verseCount': value['verseCount'],
        'verses': ((value['verses'] as Array<any>).map(SearchVerseToJSON)),
        'passages': value['passages'] == null ? undefined : ((value['passages'] as Array<any>).map(PassageToJSON)),
    };
}

