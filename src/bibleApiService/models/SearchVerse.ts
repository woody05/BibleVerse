/* tslint:disable */
/* eslint-disable */
/**
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchVerse
 */
export interface SearchVerse {
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    bibleId: string;
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    bookId: string;
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    chapterId: string;
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof SearchVerse
     */
    reference?: string;
}

/**
 * Check if a given object implements the SearchVerse interface.
 */
export function instanceOfSearchVerse(value: object): value is SearchVerse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('bibleId' in value) || value['bibleId'] === undefined) return false;
    if (!('bookId' in value) || value['bookId'] === undefined) return false;
    if (!('chapterId' in value) || value['chapterId'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function SearchVerseFromJSON(json: any): SearchVerse {
    return SearchVerseFromJSONTyped(json, false);
}

export function SearchVerseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchVerse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'orgId': json['orgId'],
        'bibleId': json['bibleId'],
        'bookId': json['bookId'],
        'chapterId': json['chapterId'],
        'text': json['text'],
        'reference': json['reference'] == null ? undefined : json['reference'],
    };
}

export function SearchVerseToJSON(json: any): SearchVerse {
    return SearchVerseToJSONTyped(json, false);
}

export function SearchVerseToJSONTyped(value?: SearchVerse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'orgId': value['orgId'],
        'bibleId': value['bibleId'],
        'bookId': value['bookId'],
        'chapterId': value['chapterId'],
        'text': value['text'],
        'reference': value['reference'],
    };
}

