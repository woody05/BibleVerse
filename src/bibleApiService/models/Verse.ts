/* tslint:disable */
/* eslint-disable */
/**
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VerseNext } from './VerseNext';
import {
    VerseNextFromJSON,
    VerseNextFromJSONTyped,
    VerseNextToJSON,
    VerseNextToJSONTyped,
} from './VerseNext';

/**
 * 
 * @export
 * @interface Verse
 */
export interface Verse {
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    orgId: string;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    bibleId: string;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    bookId: string;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    chapterId: string;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    reference: string;
    /**
     * 
     * @type {number}
     * @memberof Verse
     */
    verseCount: number;
    /**
     * 
     * @type {string}
     * @memberof Verse
     */
    copyright: string;
    /**
     * 
     * @type {VerseNext}
     * @memberof Verse
     */
    next?: VerseNext;
    /**
     * 
     * @type {VerseNext}
     * @memberof Verse
     */
    previous?: VerseNext;
}

/**
 * Check if a given object implements the Verse interface.
 */
export function instanceOfVerse(value: object): value is Verse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('orgId' in value) || value['orgId'] === undefined) return false;
    if (!('bibleId' in value) || value['bibleId'] === undefined) return false;
    if (!('bookId' in value) || value['bookId'] === undefined) return false;
    if (!('chapterId' in value) || value['chapterId'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('reference' in value) || value['reference'] === undefined) return false;
    if (!('verseCount' in value) || value['verseCount'] === undefined) return false;
    if (!('copyright' in value) || value['copyright'] === undefined) return false;
    return true;
}

export function VerseFromJSON(json: any): Verse {
    return VerseFromJSONTyped(json, false);
}

export function VerseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Verse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'orgId': json['orgId'],
        'bibleId': json['bibleId'],
        'bookId': json['bookId'],
        'chapterId': json['chapterId'],
        'content': json['content'],
        'reference': json['reference'],
        'verseCount': json['verseCount'],
        'copyright': json['copyright'],
        'next': json['next'] == null ? undefined : VerseNextFromJSON(json['next']),
        'previous': json['previous'] == null ? undefined : VerseNextFromJSON(json['previous']),
    };
}

export function VerseToJSON(json: any): Verse {
    return VerseToJSONTyped(json, false);
}

export function VerseToJSONTyped(value?: Verse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'orgId': value['orgId'],
        'bibleId': value['bibleId'],
        'bookId': value['bookId'],
        'chapterId': value['chapterId'],
        'content': value['content'],
        'reference': value['reference'],
        'verseCount': value['verseCount'],
        'copyright': value['copyright'],
        'next': VerseNextToJSON(value['next']),
        'previous': VerseNextToJSON(value['previous']),
    };
}

